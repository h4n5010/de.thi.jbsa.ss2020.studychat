plugins {
    id 'org.springframework.boot' version '2.2.4.RELEASE' apply false
    id 'io.spring.dependency-management' version '1.0.9.RELEASE' apply false
    id 'org.asciidoctor.convert' version '1.5.8' apply false
    id 'java'
    id 'com.google.cloud.tools.jib' version '1.8.0' apply false
    id 'com.vaadin' version '0.6.0' apply false
}

allprojects {
    group = 'de.thi.jbsa'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '1.8'
}


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

subprojects {
    if (project.name.startsWith("f-") ||project.name.startsWith("b-")) {
        apply plugin: 'org.springframework.boot'
        apply plugin: 'io.spring.dependency-management'
        apply plugin: 'org.asciidoctor.convert'
        apply plugin: 'java'
        apply plugin: 'com.google.cloud.tools.jib'

        repositories {
            mavenCentral()
        }

        ext {
            set('snippetsDir', file("build/generated-snippets"))
        }

        dependencies {
            implementation 'org.springframework.boot:spring-boot-starter-activemq'
            implementation 'org.springframework.boot:spring-boot-starter-actuator'
            implementation 'org.springframework.boot:spring-boot-starter-data-rest'
            implementation 'org.springframework.boot:spring-boot-starter-integration'
            implementation 'org.springframework.boot:spring-boot-starter-web'
            implementation 'org.liquibase:liquibase-core'

            implementation project(':api')


            compileOnly 'org.projectlombok:lombok'
            annotationProcessor 'org.projectlombok:lombok'
            testImplementation('org.springframework.boot:spring-boot-starter-test') {
                exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
            }
            testImplementation 'org.springframework.integration:spring-integration-test'
            testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
        }

        test {
            outputs.dir snippetsDir
            useJUnitPlatform()
        }

        jib {
            container.creationTime 'USE_CURRENT_TIMESTAMP'
        }
        asciidoctor {
            inputs.dir snippetsDir
            dependsOn test
        }
    }
}
